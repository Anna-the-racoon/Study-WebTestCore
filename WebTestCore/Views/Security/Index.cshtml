@model WebTestCore.Models.Security.SecurityVm

@using (Html.BeginForm("Index", "Security", FormMethod.Post))
{

    <h3> Input you login and password</h3>
    <fieldset>
        <div class="mb-3, editor-field">
            <label>Login</label>
            <input class="form-control" data-val="true" data-val-required="Не указан логин" type="text" asp-for="@Model.Login" autofocus required/>
            <span class="field-validation-valid" asp-validation-for="Login" data-valmsg-for="Login" data-valmsg-replace="true"></span>
        </div>
        <div class="mb-3, editor-field">
            <label>Password</label>
            <input class="form-control" data-val="true" data-val-required="Не указан пароль" type="password" asp-for="@Model.Password" required>
            <span class="field-validation-valid" asp-validation-for="Password" data-valmsg-replace="true"></span>
        </div>
        <button type="submit" class="btn btn-primary" name="Submit"
                asp-action="Index" asp-controller="Security" asp-route-area="Security">
            Submit
        </button>
    </fieldset>
}
@{Html.EndForm();}

@*<fieldset>
        <div class="mb-3, editor-field">
            @Html.LabelFor(p => p.Login)
            <input type="text" class="form-control" name="Login" id="Login" autofocus required />

            @Html.EditorFor(p => p.Login)
            @Html.ValidationMessageFor(p => p.Login)
        </div>
        <div class="mb-3, editor-field">
            @Html.LabelFor(p => p.Password)
            @Html.PasswordFor(p => p.Password)
            @Html.ValidationMessageFor(p => p.Password)
        </div>
        <button type="submit" class="btn btn-primary" name="Submit">Submit</button>
    </fieldset>*@
